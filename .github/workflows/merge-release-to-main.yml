name: Merge Release to Main

on:
  # Manually trigger this workflow
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to merge (e.g., v1.0.8)'
        required: true
        default: 'v1.0.8'
  
  # Automatically trigger when a release branch is pushed
  push:
    branches:
      - 'release/v*'

jobs:
  merge-to-main:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Git identity
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
      
      - name: Extract branch name
        shell: bash
        if: github.event_name == 'push'
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "RELEASE_BRANCH=$BRANCH_NAME" >> $GITHUB_ENV
          VERSION=${BRANCH_NAME#release/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Set branch from input
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "RELEASE_BRANCH=release/${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
      
      - name: Checkout main branch
        run: |
          git checkout main
          git pull origin main
      
      - name: Merge release branch into main
        run: |
          echo "Merging ${{ env.RELEASE_BRANCH }} into main..."
          git merge --no-ff origin/${{ env.RELEASE_BRANCH }} -m "Merge ${{ env.RELEASE_BRANCH }} into main [automated]"
      
      - name: Push changes
        run: git push origin main
      
      - name: Create GitHub release if it doesn't exist
        run: |
          if ! gh release view ${{ env.VERSION }} &>/dev/null; then
            echo "Creating GitHub release ${{ env.VERSION }}..."
            CHANGELOG=$(awk "/## \\[${{ env.VERSION }}\\]/,/## \\[/" CHANGELOG.md | sed '$d')
            if [ -z "$CHANGELOG" ]; then
              CHANGELOG="Release ${{ env.VERSION }}"
            fi
            gh release create ${{ env.VERSION }} --title "Release ${{ env.VERSION }}" --notes "$CHANGELOG"
          else
            echo "GitHub release ${{ env.VERSION }} already exists, skipping creation."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Dockerfile for Orpheus Engine Browser Version
# Multi-stage build for production deployment

# Stage 1: Build the application
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY pnpm-lock.yaml ./
COPY pnpm-workspace.yaml ./

# Install pnpm and dependencies
RUN npm install -g pnpm@10.6.4
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build browser version
RUN npm run build:browser

# Stage 2: Production server
FROM nginx:alpine AS production

# Install Node.js for potential backend services
RUN apk add --no-cache nodejs npm

# Copy custom nginx configuration
COPY nginx.browser.conf /etc/nginx/nginx.conf

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy service worker and manifest to correct locations
COPY --from=builder /app/public/sw.js /usr/share/nginx/html/
COPY --from=builder /app/public/manifest.json /usr/share/nginx/html/

# Create necessary directories
RUN mkdir -p /usr/share/nginx/html/icons
RUN mkdir -p /usr/share/nginx/html/screenshots

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html
RUN chmod -R 755 /usr/share/nginx/html

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Add health check endpoint
RUN echo '<!DOCTYPE html><html><body>OK</body></html>' > /usr/share/nginx/html/health

# Expose port
EXPOSE 3000

# Labels for metadata
LABEL name="orpheus-engine-browser"
LABEL version="1.0.10"
LABEL description="Orpheus Engine - Browser Edition"
LABEL maintainer="Creative Platform <support@creativeplatform.xyz>"

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

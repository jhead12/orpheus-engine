{
  "$schema": "https://json.schemastore.org/package.json",
  "name": "oew",
  "version": "1.0.10",
  "type": "module",
  "authors": [
    {
      "name": "Creative Organization DAO",
      "email": "creatives@creativeplatform.xyz",
      "url": "https://github.com/creativeplatform"
    },
    {
      "name": "JEH Ventures, LLC",
      "email": "support@jeldonmusic.com",
      "url": "https://www.matrixblend.com"
    }
  ],
  "description": "Digital Audio Workstation (DAW) made in React",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jhead12/orpheus-engine.git"
  },
  "private": true,
  "main": "build/electron/main.js",
  "engines": {
    "node": ">=20.19.0",
    "pnpm": ">=10.6.4"
  },
  "scripts": {
    "cleanup": "chmod +x scripts/cleanup-duplicates.sh && ./scripts/cleanup-duplicates.sh",
    "cleanup:archives": "rm -rf archives/app-tsx-* archives/editor-consolidation-* archives/workstation-consolidation-* archives/oew-main-backup-*",
    "cleanup:temp": "rm -f *.patch *.backup* && rm -rf temp_check/ backup_changes/",
    "cleanup:bak": "find ./workstation -name \"*.bak\" -type f -delete && find ./workstation -name \"*.bak\" -type d -exec rm -rf {} +",
    "cleanup:verify": "node scripts/verify-cleanup.js",
    "cleanup:all": "npm run cleanup && npm run cleanup:temp && npm run cleanup:archives && npm run cleanup:bak && npm run cleanup:verify",
    "setup:electron": "chmod +x scripts/setup-electron-symlinks.sh && ./scripts/setup-electron-symlinks.sh",
    "dev": "cross-env NODE_ENV=development nodemon --exec \"node electron-launch.mjs\"",
    "dev:vite": "cross-env NODE_ENV=development vite",
    "dev:local": "cross-env NODE_ENV=development VITE_PORT=3000 vite",
    "dev:prod": "cross-env NODE_ENV=production vite",
    "lint": "eslint \"workstation/frontend/src/**/*.{js,jsx,ts,tsx}\"",
    "lint:fix": "eslint \"workstation/frontend/src/**/*.{js,jsx,ts,tsx}\" --fix",
    "dev:headless": "cross-env NODE_ENV=development ELECTRON_DISABLE_GPU=1 ELECTRON_ENABLE_LOGGING=1 ELECTRON_NO_ATTACH_CONSOLE=1 electron . --disable-gpu --no-sandbox --headless --disable-dev-shm-usage --force-headless",
    "build": "npm run test:screenshots && tsc -b && vite build && tsc --project electron/tsconfig.json && electron-builder",
    "preview": "vite preview",
    "start": "node electron-launch.js",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui --open",
    "test:ui:full": "concurrently \"npm run test:ui\" \"npm run test:visual:ui\" \"npm run test:python:ui\"",
    "test:integration": "vitest run --config vitest.integration.config.ts",
    "test:integration:ui": "vitest --ui --config vitest.integration.config.ts --open",
    "test:visual:ui": "vitest --ui --config vitest.visual.config.ts --open",
    "test:python:ui": "python -m pytest --html=test-results/python-report.html --self-contained-html && open test-results/python-report.html",
    "test:models": "vitest run --config vitest.models.config.ts",
    "test:models:ui": "vitest --ui --config vitest.models.config.ts --open",
    "test:data-transfer": "vitest run --config vitest.integration.config.ts --testNamePattern=\"data-transfer\"",
    "pretest": "mkdir -p __snapshots__/screenshots __snapshots__/diffs __snapshots__/gifs test-results",
    "test:screenshots": "pnpm pretest && vitest run --config vitest.visual.config.ts \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual\" || true && node scripts/list-screenshots.js",
    "list:screenshots": "node scripts/list-screenshots.js",
    "setup:aliases": "node scripts/setup-aliases.js",
    "refactor:sample": "node scripts/refactor-sample.js",
    "refactor:imports": "node scripts/refactor-imports.js",
    "refactor:imports:auto": "node scripts/refactor-imports-auto.js",
    "fix-vite": "pnpm install --save-dev @vitejs/plugin-react",
    "fix-electron-path": "node scripts/fix-electron-path.js",
    "find-files": "ts-node scripts/findFiles.ts",
    "find-large-files": "node scripts/find-large-files.js",
    "validate:env": "node scripts/validate-env.js",
    "predev": "npm run validate:env",
    "prebuild": "npm run validate:env",
    "test:visual": "vitest run \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual\"",
    "test:visual:update": "vitest run \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual\" -u",
    "generate:visual-tests": "ts-node scripts/visual-agent.js generate",
    "generate:visual-test": "ts-node scripts/visual-agent.js generate",
    "test:visual:gif": "vitest run \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual-gif\"",
    "test:visual:gif:update": "vitest run \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual-gif\" -u",
    "list:visual-tests": "ts-node scripts/visual-agent.js list"
  }

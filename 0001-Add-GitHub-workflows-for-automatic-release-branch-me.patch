From eb114ef6ce78e18137f3b89bbe256224be1d15f5 Mon Sep 17 00:00:00 2001
From: GitHub Copilot <github-copilot@example.com>
Date: Wed, 28 May 2025 01:24:27 +0000
Subject: [PATCH] Add GitHub workflows for automatic release branch merging and
 version syncing

---
 .github/workflows/merge-release-to-main.yml | 76 +++++++++++++++++++++
 .github/workflows/sync-package-versions.yml | 47 +++++++++++++
 2 files changed, 123 insertions(+)
 create mode 100644 .github/workflows/merge-release-to-main.yml
 create mode 100644 .github/workflows/sync-package-versions.yml

diff --git a/.github/workflows/merge-release-to-main.yml b/.github/workflows/merge-release-to-main.yml
new file mode 100644
index 000000000..3a31e2678
--- /dev/null
+++ b/.github/workflows/merge-release-to-main.yml
@@ -0,0 +1,76 @@
+name: Merge Release to Main
+
+on:
+  # Manually trigger this workflow
+  workflow_dispatch:
+    inputs:
+      version:
+        description: 'The version to merge (e.g., v1.0.8)'
+        required: true
+        default: 'v1.0.8'
+  
+  # Automatically trigger when a release branch is pushed
+  push:
+    branches:
+      - 'release/v*'
+
+jobs:
+  merge-to-main:
+    runs-on: ubuntu-latest
+    permissions:
+      contents: write
+    
+    steps:
+      - name: Checkout repository
+        uses: actions/checkout@v3
+        with:
+          fetch-depth: 0
+          token: ${{ secrets.GITHUB_TOKEN }}
+      
+      - name: Set up Git identity
+        run: |
+          git config --global user.name 'GitHub Actions'
+          git config --global user.email 'actions@github.com'
+      
+      - name: Extract branch name
+        shell: bash
+        if: github.event_name == 'push'
+        run: |
+          BRANCH_NAME=${GITHUB_REF#refs/heads/}
+          echo "RELEASE_BRANCH=$BRANCH_NAME" >> $GITHUB_ENV
+          VERSION=${BRANCH_NAME#release/}
+          echo "VERSION=$VERSION" >> $GITHUB_ENV
+      
+      - name: Set branch from input
+        if: github.event_name == 'workflow_dispatch'
+        run: |
+          echo "RELEASE_BRANCH=release/${{ github.event.inputs.version }}" >> $GITHUB_ENV
+          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
+      
+      - name: Checkout main branch
+        run: |
+          git checkout main
+          git pull origin main
+      
+      - name: Merge release branch into main
+        run: |
+          echo "Merging ${{ env.RELEASE_BRANCH }} into main..."
+          git merge --no-ff origin/${{ env.RELEASE_BRANCH }} -m "Merge ${{ env.RELEASE_BRANCH }} into main [automated]"
+      
+      - name: Push changes
+        run: git push origin main
+      
+      - name: Create GitHub release if it doesn't exist
+        run: |
+          if ! gh release view ${{ env.VERSION }} &>/dev/null; then
+            echo "Creating GitHub release ${{ env.VERSION }}..."
+            CHANGELOG=$(awk "/## \\[${{ env.VERSION }}\\]/,/## \\[/" CHANGELOG.md | sed '$d')
+            if [ -z "$CHANGELOG" ]; then
+              CHANGELOG="Release ${{ env.VERSION }}"
+            fi
+            gh release create ${{ env.VERSION }} --title "Release ${{ env.VERSION }}" --notes "$CHANGELOG"
+          else
+            echo "GitHub release ${{ env.VERSION }} already exists, skipping creation."
+          fi
+        env:
+          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
diff --git a/.github/workflows/sync-package-versions.yml b/.github/workflows/sync-package-versions.yml
new file mode 100644
index 000000000..1c9fab084
--- /dev/null
+++ b/.github/workflows/sync-package-versions.yml
@@ -0,0 +1,47 @@
+name: Sync Package Versions
+
+on:
+  # Run when a new release is published
+  release:
+    types: [published]
+  
+  # Manually trigger this workflow
+  workflow_dispatch:
+
+jobs:
+  sync-versions:
+    runs-on: ubuntu-latest
+    permissions:
+      contents: write
+    
+    steps:
+      - name: Checkout repository
+        uses: actions/checkout@v3
+        with:
+          fetch-depth: 0
+          token: ${{ secrets.GITHUB_TOKEN }}
+      
+      - name: Set up Git identity
+        run: |
+          git config --global user.name 'GitHub Actions'
+          git config --global user.email 'actions@github.com'
+      
+      - name: Set up Node.js
+        uses: actions/setup-node@v3
+        with:
+          node-version: '16'
+          cache: 'npm'
+      
+      - name: Install dependencies
+        run: npm ci
+      
+      - name: Run version sync script
+        run: npm run sync-versions
+      
+      - name: Commit and push version changes
+        run: |
+          git add -A
+          git diff-index --quiet HEAD || git commit -m "chore: sync package versions [automated]"
+          git push
+        env:
+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
-- 
2.49.0


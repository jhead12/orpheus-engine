{
  "$schema": "https://json.schemastore.org/package.json",
  "name": "oew",
  "version": "1.0.10",
  "type": "module",
  "authors": [
    {
      "name": "Creative Organization DAO",
      "email": "creatives@creativeplatform.xyz",
      "url": "https://github.com/creativeplatform"
    },
    {
      "name": "JEH Ventures, LLC",
      "email": "support@jeldonmusic.com",
      "url": "https://www.matrixblend.com"
    }
  ],
  "description": "Digital Audio Workstation (DAW) made in React",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sirgawain0x/orpheus-engine.git"
  },
  "private": true,
  "main": "build/electron/main.js",
  "engines": {
    "node": ">=20.11.1",
    "pnpm": ">=10.6.4"
  },
  "scripts": {
    "cleanup": "chmod +x scripts/cleanup-duplicates.sh && ./scripts/cleanup-duplicates.sh",
    "cleanup:archives": "rm -rf archives/app-tsx-* archives/editor-consolidation-* archives/workstation-consolidation-* archives/oew-main-backup-*",
    "cleanup:temp": "rm -f *.patch *.backup* && rm -rf temp_check/ backup_changes/",
    "cleanup:bak": "find ./workstation -name \"*.bak\" -type f -delete && find ./workstation -name \"*.bak\" -type d -exec rm -rf {} +",
    "cleanup:verify": "node scripts/verify-cleanup.js",
    "cleanup:all": "pnpm run cleanup && pnpm run cleanup:temp && pnpm run cleanup:archives && pnpm run cleanup:bak && pnpm run cleanup:verify",
    "update:all": "chmod +x scripts/update-all.sh && ./scripts/update-all.sh",
    "fix:permissions": "node scripts/fix-permissions-win.js",
    "fix:permissions:win": "node scripts/fix-permissions-win.js",
    "fix:permissions:unix": "scripts\\fix-permissions.bat",
    "setup:electron": "node scripts/setup-electron-win.js",
    "setup:electron:win": "scripts\\setup-electron.bat",
    "install:all": "node scripts/install-all.js",
    "install:ffmpeg": "node scripts/install-ffmpeg.js",
    "install:vite": "node scripts/install-vite-deps.js",
    "install:monitor": "node scripts/install-monitor-backend.js",
    "postinstall": "pnpm run install:all",
    "setup": "pnpm install && pnpm run fix:permissions && pnpm run install:all && pnpm run setup:electron",
    "dev": "cross-env NODE_ENV=development nodemon --exec \"node electron-launch.mjs\"",
    "dev:vite": "cross-env NODE_ENV=development vite",
    "dev:local": "cross-env NODE_ENV=development VITE_PORT=3000 vite",
    "dev:prod": "cross-env NODE_ENV=production vite",
    "lint": "eslint \"workstation/frontend/src/**/*.{js,jsx,ts,tsx}\"",
    "lint:fix": "eslint \"workstation/frontend/src/**/*.{js,jsx,ts,tsx}\" --fix",
    "dev:headless": "cross-env NODE_ENV=development ELECTRON_DISABLE_GPU=1 ELECTRON_ENABLE_LOGGING=1 ELECTRON_NO_ATTACH_CONSOLE=1 electron . --disable-gpu --no-sandbox --headless --disable-dev-shm-usage --force-headless",
    "build": "pnpm run test:screenshots && tsc -b && vite build && tsc --project electron/tsconfig.json && electron-builder",
    "preview": "vite preview",
    "start": "node electron-launch.js",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui --open",
    "test:ui:full": "concurrently \"pnpm run test:ui\" \"pnpm run test:visual:ui\" \"pnpm run test:python:ui\"",
    "test:integration": "vitest run --config vitest.integration.config.ts",
    "test:integration:ui": "vitest --ui --config vitest.integration.config.ts --open",
    "test:visual:ui": "vitest --ui --config vitest.visual.config.ts --open",
    "test:python:ui": "python -m pytest --html=test-results/python-report.html --self-contained-html && open test-results/python-report.html",
    "test:models": "vitest run --config vitest.models.config.ts",
    "test:models:ui": "vitest --ui --config vitest.models.config.ts --open",
    "test:data-transfer": "vitest run --config vitest.integration.config.ts --testNamePattern=\"data-transfer\"",
    "pretest": "mkdir -p __snapshots__/screenshots __snapshots__/diffs __snapshots__/gifs test-results",
    "test:screenshots": "pnpm pretest && vitest run --config vitest.visual.config.ts \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual\" || true && node scripts/list-screenshots.js",
    "list:screenshots": "node scripts/list-screenshots.js",
    "setup:aliases": "node scripts/setup-aliases.js",
    "refactor:sample": "node scripts/refactor-sample.js",
    "refactor:imports": "node scripts/refactor-imports.js",
    "refactor:imports:auto": "node scripts/refactor-imports-auto.js",
    "fix-vite": "pnpm install --save-dev @vitejs/plugin-react",
    "fix-electron-path": "node scripts/fix-electron-path.js",
    "find-files": "ts-node scripts/findFiles.ts",
    "find-large-files": "node scripts/find-large-files.js",
    "validate:env": "node scripts/validate-env.js",
    "predev": "npm run validate:env",
    "prebuild": "npm run validate:env",
    "test:visual": "vitest run \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual\"",
    "test:visual:update": "vitest run \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual\" -u",
    "generate:visual-tests": "ts-node scripts/visual-agent.js generate",
    "generate:visual-test": "ts-node scripts/visual-agent.js generate",
    "test:visual:gif": "vitest run \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual-gif\"",
    "test:visual:gif:update": "vitest run \".*\\.test\\.tsx?$\" --testNamePattern=\"@visual-gif\" -u",
    "list:visual-tests": "ts-node scripts/visual-agent.js list"
  },
  "dependencies": {
    "@apollo/server": "^4.12.2",
    "@emotion/react": "^11.11.3",
    "@emotion/styled": "^11.11.0",
    "@graphql-tools/schema": "^10.0.2",
    "@mui/icons-material": "^5.15.11",
    "@mui/material": "^5.15.11",
    "bootstrap": "^5.3.3",
    "buffer": "^6.0.3",
    "dataloader": "^2.2.2",
    "graphql": "^16.8.1",
    "graphql-scalars": "^1.22.4",
    "graphql-tools": "^9.0.0",
    "jspdf": "^2.5.1",
    "lodash": "^4.17.21",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-icons": "^4.12.0",
    "react-resize-detector": "^9.1.1",
    "react-router-dom": "^6.22.2",
    "styled-components": "^6.1.8",
    "uuid": "^9.0.1"
  },
  "peerDependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@testing-library/dom": "^9.3.4",
    "@testing-library/jest-dom": "^6.4.2",
    "@testing-library/react": "^14.2.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/jest": "^29.5.12",
    "@types/jest-image-snapshot": "^6.4.0",
    "@types/jsdom": "^21.1.6",
    "@types/lodash": "^4.14.202",
    "@types/node": "^20.11.24",
    "@types/react": "^18.2.61",
    "@types/react-dom": "^18.2.19",
    "@types/styled-components": "^5.1.34",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@types/uuid": "^9.0.8",
    "eslint": "^9.0.0-beta.1",
    "@typescript-eslint/eslint-plugin": "^7.1.0",
    "@typescript-eslint/parser": "^7.1.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "@vitest/coverage-v8": "^1.3.1",
    "@vitest/ui": "^1.3.1",
    "concurrently": "^8.2.2",
    "conventional-changelog": "^5.1.0",
    "cross-env": "^7.0.3",
    "dmg-builder": "^24.13.3",
    "electron": "^28.3.3",
    "electron-builder": "^24.13.3",
    "electron-builder-squirrel-windows": "^24.13.3",
    "glob": "^10.3.10",
    "rimraf": "^5.0.5"
  },
  "build": {
    "productName": "Orpheus Engine",
    "appId": "com.creativeplatform.OEW",
    "directories": {
      "output": "dist"
    },
    "files": [
      "build/**/*"
    ],
    "extraMetadata": {
      "main": "build/electron/main.js"
    },
    "extraResources": [
      "src/assets/**/*"
    ],
    "publish": {
      "provider": "github",
      "owner": "Creative Organization DAO",
      "repo": "orpheus-engine"
    }
  }
}

{
  "name": "orpheus-engine",
  "version": "1.0.07",
  "private": true,
  "workspaces": [
    "orpheus-engine-workstation/*"
  ],
  "dependencies": {
    "axios": "1.9.0",
    "concurrently": "^8.2.2",
    "path": "^0.12.7",
    "web3.db-fileconnector": "^1.7.0"
  },
  "scripts": {
    "install-all": "node scripts/install-all.js",
    "start": "concurrently \"npm run start:rag-backend\" \"npm run start:audio-backend\" \"npm run start:daw\"",
    "dev": "concurrently \"npm run start:rag-backend\" \"npm run start:audio-backend\" \"npm run start:daw\"",
    "start:frontend": "cd orpheus-engine-workstation/frontend && npm start",
    "start:daw": "cd OEW-main && npm run dev",
    "start:rag-backend": "cd orpheus-engine-workstation/backend/agentic_rag && FLASK_APP=main.py FLASK_ENV=development python -m flask run --port 5000",
    "start:audio-backend": "cd orpheus-engine-workstation/backend && uvicorn main:app --host 0.0.0.0 --port 7008 --reload",
    "start:monitor-backend": "cd orpheus-engine-workstation/backend && FLASK_APP=monitor_api.py FLASK_ENV=development python -m flask run --port 8000",
    "build": "cd orpheus-engine-workstation/frontend && NODE_OPTIONS=--openssl-legacy-provider npm run build",
    "build-all": "npm run build --workspace=orpheus-engine-workstation/frontend && npm run build --workspace=orpheus-engine-workstation/backend",
    "test": "npm run test:frontend",
    "test:frontend": "cd orpheus-engine-workstation/frontend && npm test -- --watchAll=false --passWithNoTests",
    "lint": "npm run lint:frontend",
    "clean": "echo 'Cleaning workspace...' && rm -rf node_modules package-lock.json && rm -rf orpheus-engine-workstation/frontend/node_modules orpheus-engine-workstation/frontend/package-lock.json && rm -rf orpheus-engine-workstation/backend/node_modules orpheus-engine-workstation/backend/package-lock.json && echo 'Installing dependencies...' && npm install",
    "lint:frontend": "echo 'Linting frontend via build process...' && cd orpheus-engine-workstation/frontend && NODE_OPTIONS=--openssl-legacy-provider npm run build",
    "validate": "npm run test && npm run lint",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s",
    "release:patch": "npm run release:prepare && npm run version:patch && npm run branch:release",
    "release:minor": "npm run release:prepare && npm run version:minor && npm run branch:release",
    "release:major": "npm run release:prepare && npm run version:major && npm run branch:release",
    "release:prepare": "git checkout main && git pull origin main && git merge develop",
    "version:patch": "npm run validate && npm run changelog && npm version 1.1.0 --no-git-tag-version -m 'chore(release): %s' && git push && git push --tags",
    "version:minor": "npm run validate && npm run changelog && npm version 1.1.0 --no-git-tag-version -m 'chore(release): %s' && git push && git push --tags",
    "version:major": "npm run validate && npm run changelog && npm version major -m 'chore(release): %s' && git push && git push --tags",
    "sync-versions": "node scripts/sync-versions.js",
    "postversion": "npm run sync-versions",
    "permissions": "find . -type f -name '*.sh' -exec chmod +x {} \\",
    "branch:feature": "git checkout develop && git checkout -b feature/$npm_config_name",
    "branch:hotfix": "git checkout main && git checkout -b hotfix/$npm_config_name",
    "branch:cleanup": "git branch --merged | grep -v '\\*\\|main\\|develop' | xargs -r git branch -d",
    "branch:release": "git checkout -b release/v$npm_package_version"
  },
  "devDependencies": {
    "conventional-changelog-cli": "^4.1.0"
  },
  "resolutions": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=7.0.0"
  }
}
